#!/usr/bin/env python3
import sys
import random

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollard_rho(n):
    x = random.randint(0, n - 1)
    y = x
    c = random.randint(0, n - 1)
    d = 1
    while d == 1:
        x = ((x * x + c) % n)
        y = ((y * y + c) % n)
        y = ((y * y + c) % n)
        d = gcd(abs(x - y), n)
        if d == n:
            return None
    if d == n:
        return None
    return d

def factorize(n):
    if n == 1:
        return [1]
    if n % 2 == 0:
        return [2] + factorize(n // 2)
    d = pollard_rho(n)
    if d is None:
        return [n]
    return factorize(d) + factorize(n // d)

def main():
    filename = sys.argv[1]
    with open(filename, 'r') as f:
        lines = f.readlines()
        for line in lines:
            n = int(line.strip())
            factorizations = factorize(n)
            p = factorizations[0]
            q = n // p
            print(f"{n}={p}*{q}")

if __name__ == '__main__':
    main()
